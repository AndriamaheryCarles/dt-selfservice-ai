<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>mg.telma.data</groupId>
    <artifactId>dt-selfservice-ai</artifactId>
    <version>1.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>


    <name>dt-selfservice-ai</name>
    <url>https://gitdwh.telma.net/datadigital/dp-data-distribution/dt-selfservice-ai</url>

   <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <java.version>17</java.version>
      <maven.compiler.source>17</maven.compiler.source>
      <maven.compiler.target>17</maven.compiler.target>
      <avro-maven-plugin.version>1.10.2</avro-maven-plugin.version>
      <avro.version>1.10.2</avro.version>
      <io.confluent.version>6.1.1</io.confluent.version>
      <jakarta.validation.version>3.0.2</jakarta.validation.version>
      <junit-bom.version>5.8.2</junit-bom.version>
      <junit-jupiter.version>5.8.2</junit-jupiter.version>
      <lombok.version>1.18.28</lombok.version>
      <maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
      <maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
      <org.apache.kafka.version>2.8.0</org.apache.kafka.version>
      <org.everit.json>1.5.1</org.everit.json>
      <org.quickfixj.version>2.2.0</org.quickfixj.version>
      <spring-boot.version>3.3.1</spring-boot.version>
      <spring-cloud-starter-config.version>4.1.2</spring-cloud-starter-config.version>
      <spring-cloud.version>2023.0.2</spring-cloud.version>
      <spring-kafka.version>2.7.0</spring-kafka.version>
      <spring-ai.version>1.0.0-M1</spring-ai.version>
      <springdoc.version>2.1.0</springdoc.version>
      <typesafe.version>1.4.1</typesafe.version>
      <vertx.version>4.0.3</vertx.version>
      <elastic-apm.version>1.24.0</elastic-apm.version>
      <guava.version>31.0.1-jre</guava.version>
      <mapstruct.version>1.5.5.Final</mapstruct.version>
      <jsonwebtoken.version>0.11.5</jsonwebtoken.version>

      <main.class>na</main.class>

     <maven-deploy-plugin.version>2.8.1</maven-deploy-plugin.version>
     <nexus-staging-maven-plugin.version>1.5.1</nexus-staging-maven-plugin.version>
     <sonar.qualitygate.wait>true</sonar.qualitygate.wait>

       <sonar.qualitygate.wait>true</sonar.qualitygate.wait>
       <sonar.dependencyCheck.htmlReportPath>${project.build.directory}/dependency-check/dependency-check-report.html</sonar.dependencyCheck.htmlReportPath>
       <sonar.dependencyCheck.jsonReportPath>${project.build.directory}/dependency-check/dependency-check-report.json</sonar.dependencyCheck.jsonReportPath>
       <sonar.dependencyCheck.summarize>true</sonar.dependencyCheck.summarize>
       <sonar.coverage.jacoco.xmlReportPaths>${project.build.directory}/site/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>


       <common-io.version>2.7</common-io.version>
       <testcontainers.version>1.19.7</testcontainers.version>
       <cucumber-bom.version>7.13.0</cucumber-bom.version>
       <mockito.version>4.8.1</mockito.version>
       <assertj.version>3.23.1</assertj.version>
    </properties>

    <modules>
        <module>dt-extraction-backend</module>
    </modules>


    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>nexus-releases</id>
            <url>https://nexus-tdf.telma.net/repository/maven-releases</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>nexus-snapshots</id>
            <url>https://nexus-tdf.telma.net/repository/maven-snapshots</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>
    </repositories>

    <distributionManagement>
        <repository>
            <id>nexus-releases</id>
            <url>https://nexus-tdf.telma.net/repository/maven-releases/</url>
        </repository>
        <snapshotRepository>
            <id>nexus-snapshots</id>
            <url>https://nexus-tdf.telma.net/repository/maven-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>


   <dependencyManagement>
      <dependencies>

         <!-- https://mvnrepository.com/artifact/org.projectlombok/lombok -->
         <dependency>
            <artifactId>lombok</artifactId>
            <groupId>org.projectlombok</groupId>
            <version>${lombok.version}</version>
         </dependency>

         <!-- https://mvnrepository.com/artifact/org.apache.avro/avro -->
         <dependency>
            <artifactId>avro</artifactId>
            <groupId>org.apache.avro</groupId>
            <version>${avro.version}</version>
         </dependency>

         <!-- https://mvnrepository.com/artifact/io.confluent/kafka-avro-serializer -->
         <dependency>
            <artifactId>kafka-avro-serializer</artifactId>
            <groupId>io.confluent</groupId>
            <version>${io.confluent.version}</version>
         </dependency>

         <!-- https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka -->
         <dependency>
            <artifactId>spring-kafka</artifactId>
            <groupId>org.springframework.kafka</groupId>
            <version>${spring-kafka.version}</version>
         </dependency>

         <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies -->
         <dependency>
            <artifactId>spring-boot-dependencies</artifactId>
            <groupId>org.springframework.boot</groupId>
            <scope>import</scope>
            <type>pom</type>
            <version>${spring-boot.version}</version>
         </dependency>

         <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-dependencies</artifactId>
            <version>${spring-cloud.version}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>

         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-parent</artifactId>
            <version>${spring-boot.version}</version>
         </dependency>

         <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
            <version>${spring-cloud-starter-config.version}</version>
         </dependency>

         <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
            <version>${spring-cloud-starter-config.version}</version>
         </dependency>

         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-ldap</artifactId>
            <version>${spring-boot.version}</version>
         </dependency>

         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>${spring-boot.version}</version>
         </dependency>

         <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>
         </dependency>

          <dependency>
              <groupId>org.springframework.ai</groupId>
              <artifactId>spring-ai-bom</artifactId>
              <version>${spring-ai.version}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>

         <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc.version}</version>
         </dependency>

         <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
            <version>${springdoc.version}</version>
         </dependency>

         <dependency>
            <groupId>com.typesafe</groupId>
            <artifactId>config</artifactId>
            <version>${typesafe.version}</version>
         </dependency>

         <!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients -->
         <dependency>
            <artifactId>kafka-clients</artifactId>
            <groupId>org.apache.kafka</groupId>
            <version>${org.apache.kafka.version}</version>
         </dependency>

         <!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams -->
         <dependency>
            <artifactId>kafka-streams</artifactId>
            <groupId>org.apache.kafka</groupId>
            <version>${org.apache.kafka.version}</version>
         </dependency>

         <!-- https://mvnrepository.com/artifact/io.confluent/kafka-streams-avro-serde -->
         <dependency>
            <artifactId>kafka-streams-avro-serde</artifactId>
            <groupId>io.confluent</groupId>
            <version>${io.confluent.version}</version>
         </dependency>

         <dependency>
            <artifactId>quickfixj-messages-fix44</artifactId>
            <groupId>org.quickfixj</groupId>
            <version>${org.quickfixj.version}</version>
         </dependency>

         <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation -->
         <dependency>
            <artifactId>spring-boot-starter-validation</artifactId>
            <groupId>org.springframework.boot</groupId>
            <version>${spring-boot.version}</version>
         </dependency>

         <!-- https://mvnrepository.com/artifact/org.everit.json/org.everit.json.schema -->
         <dependency>
            <artifactId>org.everit.json.schema</artifactId>
            <groupId>org.everit.json</groupId>
            <version>${org.everit.json}</version>
         </dependency>

         <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>${jsonwebtoken.version}</version>
         </dependency>

         <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>${jsonwebtoken.version}</version>
         </dependency>

         <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>${jsonwebtoken.version}</version>
         </dependency>

          <dependency>
              <groupId>com.google.guava</groupId>
              <artifactId>guava</artifactId>
              <version>${guava.version}</version>
          </dependency>

          <dependency>
              <groupId>org.mapstruct</groupId>
              <artifactId>mapstruct</artifactId>
              <version>${mapstruct.version}</version>
          </dependency>


          <dependency>
              <groupId>commons-io</groupId>
              <artifactId>commons-io</artifactId>
              <version>${common-io.version}</version>
          </dependency>

         <!-- Test Dependencies -->
          <!-- https://mvnrepository.com/artifact/org.junit/junit-bom -->
          <dependency>
              <groupId>org.junit</groupId>
              <artifactId>junit-bom</artifactId>
              <version>${junit-bom.version}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>

          <dependency>
              <groupId>io.cucumber</groupId>
              <artifactId>cucumber-bom</artifactId>
              <version>${cucumber-bom.version}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>

          <dependency>
              <groupId>org.testcontainers</groupId>
              <artifactId>testcontainers-bom</artifactId>
              <version>${testcontainers.version}</version>
              <type>pom</type>
              <scope>import</scope>
          </dependency>

         <!-- https://mvnrepository.com/artifact/org.springframework.kafka/spring-kafka-test -->
         <dependency>
            <artifactId>spring-kafka-test</artifactId>
            <groupId>org.springframework.kafka</groupId>
            <scope>test</scope>
            <version>${spring-kafka.version}</version>
         </dependency>

         <!--  https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams-test-utils -->
         <dependency>
            <artifactId>kafka-streams-test-utils</artifactId>
            <groupId>org.apache.kafka</groupId>
            <scope>test</scope>
            <version>${org.apache.kafka.version}</version>
         </dependency>

          <dependency>
              <groupId>org.springframework.boot</groupId>
              <artifactId>spring-boot-starter-test</artifactId>
              <version>${spring-boot.version}</version>
              <scope>test</scope>
          </dependency>

          <dependency>
              <groupId>io.cucumber</groupId>
              <artifactId>cucumber-java</artifactId>
              <version>${cucumber-bom.version}</version>
              <scope>test</scope>
          </dependency>

          <dependency>
              <groupId>io.cucumber</groupId>
              <artifactId>cucumber-junit</artifactId>
              <version>${cucumber-bom.version}</version>
              <scope>test</scope>
          </dependency>

          <dependency>
              <groupId>org.junit.vintage</groupId>
              <artifactId>junit-vintage-engine</artifactId>
              <version>${junit-bom.version}</version>
              <scope>test</scope>
          </dependency>

          <dependency>
              <groupId>io.cucumber</groupId>
              <artifactId>cucumber-spring</artifactId>
              <version>${cucumber-bom.version}</version>
              <scope>test</scope>
          </dependency>

          <dependency>
              <groupId>org.assertj</groupId>
              <artifactId>assertj-core</artifactId>
              <version>${assertj.version}</version>
              <scope>test</scope>
          </dependency>

          <dependency>
              <groupId>org.mockito</groupId>
              <artifactId>mockito-junit-jupiter</artifactId>
              <version>${mockito.version}</version>
              <scope>test</scope>
          </dependency>

          <dependency>
              <groupId>org.testcontainers</groupId>
              <artifactId>postgresql</artifactId>
              <version>${testcontainers.version}</version>
              <scope>test</scope>
          </dependency>

      </dependencies>
   </dependencyManagement>

    <build>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>${nexus-staging-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <serverId>nexus</serverId>
                    <nexusUrl>https://nexus-tdf.telma.net/</nexusUrl>
                    <skipStaging>true</skipStaging>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
                <configuration>
                    <tagNameFormat>${env.TAG}</tagNameFormat>
                </configuration>
            </plugin>


            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>3.8.0.2131</version>
            </plugin>

            <!--  https://jeremylong.github.io/DependencyCheck/dependency-check-maven/configuration.html-->
            <plugin>
                <groupId>org.owasp</groupId>
                <artifactId>dependency-check-maven</artifactId>
                <version>8.4.0</version>
                <configuration>
                    <formats>
                        <format>json</format>
                        <format>html</format>
                    </formats>
                    <outputDirectory>${project.build.directory}/dependency-check</outputDirectory>
                    <cveUrlModified>https://nist-data-mirror-pre-tdf.telma.net/nvdcve-1.1-modified.json.gz</cveUrlModified>
                    <cveUrlBase>https://nist-data-mirror-pre-tdf.telma.net/nvdcve-1.1-%d.json.gz</cveUrlBase>
                    <nexusServerId>nexus</nexusServerId>
                    <nexusUrl>https://nexus-tdf.telma.net/</nexusUrl>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.12.0</version>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.10</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>

                    <!-- attached to Maven test phase -->
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>

                    <execution>
                        <id>jacoco-check</id>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <rules>
                                <rule>
                                    <element>PACKAGE</element>
                                    <limits>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>0</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

        </plugins>
    </build>

</project>
